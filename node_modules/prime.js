var myl = require('mysqlLink');
var url = require('url');
var strTools = require('strTools');
var chart = require('chartFactory');
var fs = require('fs');
var path = require('path');


makeHostPage = function(err, rows, fields, req, res)
{
	res.writeHead(200, {'Content-Type': 'text/html'});
	res.write("<html>\n<head><title>Host List</title></head>\n<body>\n");

	if (err)
	{
		res.write('<div class="errorOutput">' + JSON.stringify(err) + '</div>');
		res.write("</body></html>");
		res.end();
		return;
	}

	res.write("<table>\n\t<tr><th>ID</th><th>host</th><th>ip address</th><th>platform</th><th>totalmem</th><th>created</th></tr>\n");
	for (i=0; i < rows.length; i++)
	{
		res.write("\t<tr><td>" + rows[i].host_id 
			+ "</td><td>" + rows[i].hostname 
			+ "</td><td>" + rows[i].ipaddr
			+ "</td><td>" + rows[i].platform 
			+ "</td><td>" + rows[i].totalmem 
			+ "</td><td>" + rows[i].created 
			+ "</td></tr>\n");
	}
	res.write("</table>\n");

	res.write("</body>\n</html>");
	res.end();
}


makeResourcePage = function(err, rows, fields, req, res)
{
	var charts = {};

	res.writeHead(200, {'Content-Type': 'text/html'});
	res.write("<html>\n<head>\n<title>Resouce Page</title>\n<script type='text/javascript' src='js/charts.js' />\n</head>\n<body>\n");

	if (err)
	{
		res.write("<h1>Error:</h1>\n" + JSON.stringify(err) + "<br/>");
	}
	else
	{
		charts = chart.readRows(rows);

		res.write(charts);
	}

	res.end("\n</body>\n</html>\n");
}

hostsList = function(req,res)
{
	var ip = url.parse(req.url, true).query['add'];

	if (strTools.isIP(ip))
	{
		myl.addHost(ip);
	}

	myl.getHosts(function(err, rows, fields)
	{
		makeHostPage(err,rows,fields,req,res);
	});

}

pingList = function(req,res)
{
	myl.getPingToday(function(err, rows, fields)
	{
		makeResourcePage(err, rows, fields, req, res);
	});
}

sendFile = function(filename, req, res)
{
	path.exists(filename, function(exists) {
		if (exists)
		{
			var file = fs.createReadStream(filename);
			res.writeHead(200, {'Content-Type': 'text/html'});
			file.setEncoding('utf8');
			file.on('data', function(data){ res.write(data); });
			file.on('end', function(){ res.end(); });
		}
		else
		{
			res.writeHead(404, {'Content-Type': 'text/html'});
			res.end(filename + ' not found.');
		}
	});
}

handleRequest = function(req, res)
{
	var key;
	var urldata = url.parse(req.url, true);
	if (urldata.pathname == "/hosts" || urldata.pathname == "/hosts/")
	{
		hostsList(req,res);
	}
	else if (urldata.pathname == "" || urldata.pathname == "/")
	{
		pingList(req,res);
	}
	else if (urldata.pathname == "/js/charts.js" || urldata.pathname == "js/charts.js")
	{
		sendFile('js/charts.js', req, res);
	}
	else
	{
		res.writeHead(404, {'Content-Type': 'text/html'});
		res.write("<br/>\n" + JSON.stringify(urldata));
		res.end();
	}
}

module.exports.handleRequest = handleRequest;
